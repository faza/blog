<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes</title>
    <link>https://faza.github.io/notes/</link>
    <description>Recent content on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Oct 2024 12:22:38 +0800</lastBuildDate><atom:link href="https://faza.github.io/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Event Registration</title>
      <link>https://faza.github.io/notes/posts/event-registration/</link>
      <pubDate>Tue, 15 Oct 2024 12:22:38 +0800</pubDate>
      
      <guid>https://faza.github.io/notes/posts/event-registration/</guid>
      
      <description>&lt;hr&gt;
&lt;h1 id=&#34;event-registration&#34;&gt;Event Registration&lt;/h1&gt;
&lt;h2 id=&#34;1-implement-event-registration-functionality&#34;&gt;1. Implement Event Registration Functionality&lt;/h2&gt;
&lt;h3 id=&#34;step-1-update-event-model&#34;&gt;Step 1: Update Event Model&lt;/h3&gt;
&lt;p&gt;Add a relationship to track registrations:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In app/models.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; flask_login &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; UserMixin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Event&lt;/span&gt;(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Model):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# ... existing fields ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    attendees &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;relationship(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User&amp;#39;&lt;/span&gt;, secondary&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;registrations&amp;#39;&lt;/span&gt;, backref&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;backref(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;attended_events&amp;#39;&lt;/span&gt;, lazy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dynamic&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Registration&lt;/span&gt;(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Model):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    __tablename__ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;registrations&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Column(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Integer, db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ForeignKey(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;user.id&amp;#39;&lt;/span&gt;), primary_key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    event_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Column(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Integer, db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ForeignKey(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;event.id&amp;#39;&lt;/span&gt;), primary_key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    registration_date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Column(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DateTime, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utcnow())
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;step-2-add-registration-route&#34;&gt;Step 2: Add Registration Route&lt;/h3&gt;
&lt;p&gt;Create a new route to handle event registration:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Sqlite3</title>
      <link>https://faza.github.io/notes/posts/sqlite3/</link>
      <pubDate>Fri, 11 Oct 2024 13:37:43 +0800</pubDate>
      
      <guid>https://faza.github.io/notes/posts/sqlite3/</guid>
      
      <description>&lt;h1 id=&#34;viewing-your-sqlite-database-with-the-command-line&#34;&gt;Viewing Your SQLite Database with the Command Line&lt;/h1&gt;
&lt;p&gt;SQLite comes with a handy command-line tool that allows you to interact with your database directly. Here&amp;rsquo;s a quick guide on how to use it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open your terminal and navigate to your project directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start the SQLite CLI by running:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sqlite3 instance/event_registration.db
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once in the SQLite prompt, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;List all tables:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.tables
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example output:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sqlite&amp;gt; .tables
event  user
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;View table schema:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.schema user
.schema event
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example output:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Events</title>
      <link>https://faza.github.io/notes/posts/events/</link>
      <pubDate>Thu, 10 Oct 2024 19:32:36 +0800</pubDate>
      
      <guid>https://faza.github.io/notes/posts/events/</guid>
      
      <description>&lt;h1 id=&#34;events&#34;&gt;Events&lt;/h1&gt;
&lt;h3 id=&#34;1-create-event-model-and-crud-operations&#34;&gt;1. Create Event Model and CRUD Operations&lt;/h3&gt;
&lt;p&gt;Add the Event model to &lt;code&gt;app/models.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Event&lt;/span&gt;(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Model):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Column(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Integer, primary_key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Column(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;String(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;), nullable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    description &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Column(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Text, nullable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Column(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DateTime, nullable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    location &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Column(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;String(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;), nullable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    organizer_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Column(db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Integer, db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ForeignKey(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;user.id&amp;#39;&lt;/span&gt;), nullable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    organizer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;relationship(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User&amp;#39;&lt;/span&gt;, backref&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;backref(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;events&amp;#39;&lt;/span&gt;, lazy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@classmethod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_event&lt;/span&gt;(cls, title, description, date, location, organizer_id):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        event &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cls(title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;title, description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;description, date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;date, location&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;location, organizer_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;organizer_id)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;session&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(event)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;session&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;commit()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; event
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@classmethod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_event_by_id&lt;/span&gt;(cls, event_id):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; cls&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(event_id)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@classmethod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_all_events&lt;/span&gt;(cls):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; cls&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;all()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update_event&lt;/span&gt;(self, title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, location&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; title:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; title
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; description:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;description &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; description
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; date:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; location:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;location &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; location
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;session&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;commit()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;delete_event&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;session&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;delete(self)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;session&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;commit()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-implement-event-creation-and-listing-functionality&#34;&gt;2. Implement Event Creation and Listing Functionality&lt;/h3&gt;
&lt;h4 id=&#34;a-create-html-templates-for-event-creation-listing-and-details&#34;&gt;a. Create HTML Templates for Event Creation, Listing and Details&lt;/h4&gt;
&lt;p&gt;Create three new HTML templates:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Flask Login</title>
      <link>https://faza.github.io/notes/posts/flask-login/</link>
      <pubDate>Wed, 09 Oct 2024 10:33:36 +0800</pubDate>
      
      <guid>https://faza.github.io/notes/posts/flask-login/</guid>
      
      <description>&lt;h1 id=&#34;how-flask-login-works-behind-the-scenes&#34;&gt;How Flask-Login Works Behind the Scenes&lt;/h1&gt;
&lt;p&gt;Flask-Login is an extension for Flask that manages user session management. It handles the common tasks of logging in, logging out, and remembering users&amp;rsquo; sessions over extended periods. Here&amp;rsquo;s a breakdown of its key components and processes:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://faza.github.io/notes/notes/images/session.png&#34; alt=&#34;session&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-user-model&#34;&gt;1. User Model&lt;/h2&gt;
&lt;p&gt;Flask-Login requires that your User model implement certain properties and methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;is_authenticated&lt;/code&gt;: True if the user has valid credentials&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_active&lt;/code&gt;: True if the user&amp;rsquo;s account is active&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_anonymous&lt;/code&gt;: False for regular users&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get_id()&lt;/code&gt;: Returns a unique identifier for the user&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are typically implemented by inheriting from &lt;code&gt;UserMixin&lt;/code&gt;.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>User registration and login flow</title>
      <link>https://faza.github.io/notes/posts/user-registration-login/</link>
      <pubDate>Wed, 09 Oct 2024 10:06:58 +0800</pubDate>
      
      <guid>https://faza.github.io/notes/posts/user-registration-login/</guid>
      
      <description>&lt;h1 id=&#34;implementing-user-registration-in-flask&#34;&gt;Implementing User Registration in Flask&lt;/h1&gt;
&lt;h2 id=&#34;architecture-of-the-app&#34;&gt;Architecture of the App&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://faza.github.io/notes/notes/images/architecture.png&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step-1-set-up-flask-project-structure&#34;&gt;Step 1: Set Up Flask Project Structure&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a new directory for your project:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir event_registration_app
cd event_registration_app
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a virtual environment and activate it:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python -m venv venv
source venv/bin/activate  # On Windows, use `venv\Scripts\activate`
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install necessary packages:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install flask flask-sqlalchemy flask-login
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the following directory structure:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;event_registration_app/
├── app/
│   ├── __init__.py
│   ├── models.py
│   ├── routes.py
│   └── templates/
│       ├── base.html
│       ├── register.html
│       └── login.html
└── run.py
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step-2-define-the-user-model&#34;&gt;Step 2: Define the User Model&lt;/h2&gt;
&lt;p&gt;Edit &lt;code&gt;app/models.py&lt;/code&gt;:&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
